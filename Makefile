NAME := push_swap
.DEFAULT_GOAL := all

#############################################################################
#############################################################################
#############################################################################

CC := cc
CFLAGS ?= -Wextra -Wall -Werror -O3 --MMD -MP
LIBFT := ./lib/Libft
HEADER := -I./include -I$(LIBFT)/header

#############################################################################
#############################################################################
#############################################################################

VPATH := src src/utils src/parse src/sort
SRC_UTILS := append.c new_node.c prepend.c revrotate.c rotate.c swap.c
SRC_PARSE := append.c new_node.c prepend.c revrotate.c rotate.c swap.c
SRC_SORT := append.c new_node.c prepend.c revrotate.c rotate.c swap.c
SRCS := $(SRC_UTILS) $(SRC_SORT) $(SRC_PARSE)

#############################################################################
#############################################################################
#############################################################################

OBJ_DIR := ./_obj
OBJS := $(addprefix $(OBJ_DIR)/, $(SRCS:%.c=%.o))

#############################################################################
#############################################################################
#############################################################################

all: $(NAME)

$(NAME): $(OBJS) $(LIBFT_NAME)
	@echo $(Y)Compiling [$(NAME)]...$(X)
	@printf $(UP)$(CUT)
	@$(CC) $(OBJS) $(LIBS) -o $(NAME)
	@echo $(G)Finished"  "[$(NAME)]...$(X)

$(OBJ_DIR)/%.o: %.c
	@echo $(Y)Compiling [$@]...$(X)
	@mkdir -p _obj
	@$(CC) $(CFLAGS) -c $< $(HEADERS) -o $@

#############################################################################
#############################################################################
#############################################################################

clean:
	@echo $(R)Cleaning"  "[$(OBJ_DIR)]...$(X);
	@$(MAKE) -C ./lib/Libft/ clean
	@printf $(UP)$(CUT)
	@if [ -d "${OBJ_DIR}" ]; then \
		echo $(R)Cleaning"  "[$(OBJ_DIR)]...$(X); \
		rm -rf ${OBJ_DIR}; \
		echo $(G)Cleaned!$(X); \
	fi

#############################################################################
#############################################################################
#############################################################################

fclean: clean
	@echo $(R)Cleaning executables...
	@make -C ./lib/Libft/ fclean
	@printf $(UP)$(CUT)
	@if [ -f "$(NAME)" ]; then \
		echo $(R)Cleaning"  "[$(NAME)]...$(X); \
		rm -f $(NAME); \
		echo $(G)Cleaned!$(X); \
	fi

#############################################################################
#############################################################################
#############################################################################

Y := "\033[33m"
R := "\033[31m"
G := "\033[32m"
X := "\033[0m"
UP := "\033[A"
CUT := "\033[K"

#############################################################################
#############################################################################
#############################################################################

.PHONY: all clean fclean re bonus
-include $(OBJS:%.o=%.d)
